cmake_minimum_required(VERSION 3.6.0)

if (NOT DEFINED ENV{CARCH})
  set(CARCH "x86_64")
  set(ENV{CARCH} ${CARCH})
else ()
  set(CARCH $ENV{CARCH})
endif ()
message(STATUS "rr-toolchain.cmake: ARCH: ${CARCH}")

if (NOT DEFINED ENV{RETROROOT_HOME})
  set(RETROROOT_HOME "/opt/retroroot")
  set(ENV{RETROROOT_HOME} ${RETROROOT_HOME})
else ()
  set(RETROROOT_HOME $ENV{RETROROOT_HOME})
endif ()
message(STATUS "rr-toolchain.cmake: RETROROOT_HOME: ${RETROROOT_HOME}")

if (NOT DEFINED ENV{RETROROOT_SYSROOT})
  set(RETROROOT_SYSROOT "${RETROROOT_HOME}/target/${CARCH}")
  set(ENV{RETROROOT_SYSROOT} ${RETROROOT_SYSROOT})
else ()
  set(RETROROOT_SYSROOT $ENV{RETROROOT_SYSROOT})
endif ()
message(STATUS "rr-toolchain.cmake: RETROROOT_SYSROOT: ${RETROROOT_SYSROOT}")

set(TARGET ${CARCH}-linux-gnu)
set(CMAKE_SYSTEM_NAME "Linux")
set(CMAKE_SYSTEM_PROCESSOR "${CARCH}")
set(CMAKE_SYSTEM_VERSION 12)
set(CMAKE_CROSSCOMPILING 1)
set(CMAKE_LIBRARY_ARCHITECTURE ${CARCH} CACHE INTERNAL "abi")
set(CMAKE_SYSROOT ${RETROROOT_SYSROOT})
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
message(STATUS "rr-toolchain.cmake: TARGET: ${TARGET}")

set(RETROROOT TRUE)

# toolchain setup
if (NOT DEFINED ENV{RETROROOT_HOST})
  set(RETROROOT_HOST "${RETROROOT_HOME}/host/${CARCH}")
  set(ENV{RETROROOT_HOST} ${RETROROOT_HOST})
else ()
  set(RETROROOT_HOST $ENV{RETROROOT_HOST})
endif ()
message(STATUS "rr-toolchain.cmake: RETROROOT_HOST: ${RETROROOT_HOST}")

set(RETROROOT_CROSS_PREFIX "${RETROROOT_HOST}/bin")
set(RETROROOT_TOOLS_COMPILER_PREFIX "${RETROROOT_CROSS_PREFIX}/${TARGET}-")

# if toolset was not found in retroroot host, try to use host compiler
if(NOT EXISTS "${RETROROOT_TOOLS_COMPILER_PREFIX}gcc")
  set(RETROROOT_HOST "/usr")
  set(RETROROOT_CROSS_PREFIX "${RETROROOT_HOST}/bin")
  set(RETROROOT_TOOLS_COMPILER_PREFIX "")
endif()

set(CMAKE_ASM_COMPILER "${RETROROOT_TOOLS_COMPILER_PREFIX}as" CACHE PATH "")
set(CMAKE_C_COMPILER "${RETROROOT_TOOLS_COMPILER_PREFIX}gcc" CACHE PATH "")
set(CMAKE_CXX_COMPILER "${RETROROOT_TOOLS_COMPILER_PREFIX}g++" CACHE PATH "")
set(CMAKE_LINKER "${RETROROOT_TOOLS_COMPILER_PREFIX}ld" CACHE PATH "")
set(CMAKE_AR "${RETROROOT_TOOLS_COMPILER_PREFIX}ar" CACHE PATH "")
set(CMAKE_RANLIB "${RETROROOT_TOOLS_COMPILER_PREFIX}ranlib" CACHE PATH "")
set(CMAKE_STRIP "${RETROROOT_TOOLS_COMPILER_PREFIX}strip" CACHE PATH "")

set(CMAKE_ASM_FLAGS_INIT "${CMAKE_ASM_FLAGS_INIT} $ENV{CFLAGS} -D__RETROROOT__ -I${RETROROOT_SYSROOT}/usr/include")
set(CMAKE_C_FLAGS_INIT "${CMAKE_C_FLAGS_INIT} ${CMAKE_ASM_FLAGS_INIT}")
set(CMAKE_CXX_FLAGS_INIT "${CMAKE_CXX_FLAGS_INIT} ${CMAKE_C_FLAGS_INIT}")
set(CMAKE_C_STANDARD_LIBRARIES "-L${RETROROOT_SYSROOT}/usr/lib ${CMAKE_C_STANDARD_LIBRARIES}")
set(CMAKE_CXX_STANDARD_LIBRARIES "-L${RETROROOT_SYSROOT}/usr/lib ${CMAKE_CXX_STANDARD_LIBRARIES} ${CMAKE_C_STANDARD_LIBRARIES}")
set(CMAKE_EXE_LINKER_FLAGS_INIT "-L${RETROROOT_SYSROOT}/usr/lib -Wl,-rpath-link=${RETROROOT_SYSROOT}/usr/lib ${CMAKE_EXE_LINKER_FLAGS_INIT}")

message(STATUS "rr-toolchain.cmake: CFLAGS: ${CMAKE_C_FLAGS_INIT}")

set(CMAKE_FIND_ROOT_PATH ${RETROROOT_SYSROOT}/usr)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(CMAKE_FIND_PACKAGE_PREFER_CONFIG FALSE)

set(BUILD_SHARED_LIBS OFF CACHE INTERNAL "Shared libs not available")

# pkg-config
set(PKG_CONFIG_EXECUTABLE "${RETROROOT_HOME}/bin/${CARCH}-linux-gnu-pkg-config" CACHE PATH "")
message(STATUS "rr-toolchain.cmake: PKG_CONFIG_EXECUTABLE: ${PKG_CONFIG_EXECUTABLE}")

